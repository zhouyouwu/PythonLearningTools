<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="club.zhouyouwu.graduate.usermanagement.mapper.UserMapper">
    <resultMap id="Role" type="club.zhouyouwu.graduate.usermanagement.model.entity.Role">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
    </resultMap>

    <resultMap id="User" type="club.zhouyouwu.graduate.usermanagement.model.entity.User">
        <id property="userId" column="user_id"/>
        <result property="password" column="password"/>
        <result property="nickname" column="nickname"/>
        <result property="phoneNo" column="phone_no"/>
        <result property="birthday" column="birthday"/>
        <result property="eMail" column="e_mail"/>
        <result property="profilePhoto" column="profile_photo"/>
        <result property="sex" column="sex"/>
        <result property="signature" column="signature"/>
        <result property="wxOpenid" column="wx_openid"/>
        <result property="sessionKey" column="session_key"/>
        <result property="lastLoginTime" column="last_login_time"/>
    </resultMap>

    <resultMap id="UserInfoVo" type="club.zhouyouwu.graduate.usermanagement.model.vo.UserInfoVo">
        <collection property="user" resultMap="User"/>
        <collection property="roles" resultMap="Role"/>
    </resultMap>

    <update id="updateUserInfo">
        update user_info
        set
            session_key = #{user.sessionKey}
            and last_login_time = #{user.lastLoginTime}
            <if test="user.password !=  null">
                and password = #{user.password}
            </if>
            <if test="user.nickname != null">
                and nickname = #{user.nickname}
            </if>
            <if test="user.phoneNo != null">
                and phone_no = #{user.phoneNo}
            </if>
            <if test="user.signature != null">
                and signature = #{user.signature}
            </if>
            <if test="user.profilePhoto != null">
                and profile_photo = #{user.profilePhoto}
            </if>
            <if test="user.eMail != null">
                and e_mail = #{user.eMail}
            </if>
            <if test="user.sex != null">
                and sex = #{user.sex}
            </if>
            <if test="user.birthday != null">
                and birthday = #{user.birthday}
            </if>
        where user_id = #{userId}
        limit 1
    </update>

    <update id="updateUserAuthInfo">
        update user_info
        set password = #{user.password}
        where user_id = #{user.userId}
        limit 1
    </update>

<!--    <select id="getUserAuthInfo" resultMap="AuthInfo">-->
<!--        select a.user_id, a.password, c.id, c.name, c.description-->
<!--        from user_info a-->
<!--        left join user_role_relation b on a.user_id = b.user_id-->
<!--        left join role c on c.id = b.role_id-->
<!--        where a.user_id = #{userId}-->
<!--        limit 1-->
<!--    </select>-->

    <select id="getUserByUserid" resultMap="UserInfoVo">
        select a.user_id, a.password, a.phone_no, a.birthday,
               a.e_mail, a.profile_photo, a.sex, a.signature,
               a.nickname, a.wx_openid, a.session_key, c.id,
               c.name, c.description
        from user_info a
        left join user_role_relation b on a.user_id = b.user_id
        left join role c on c.id = b.role_id
        where a.user_id = #{userId}
    </select>

    <select id="getUserByOpenid" resultMap="UserInfoVo">
        select a.user_id, a.password, a.phone_no, a.birthday,
               a.e_mail, a.profile_photo, a.sex, a.signature,
               a.nickname, a.wx_openid, a.session_key, c.id,
               c.name, c.description
        from user_info a
        left join user_role_relation b on a.user_id = b.user_id
        left join role c on c.id = b.role_id
        where a.wx_openid = #{openid}
    </select>

    <insert id="createUser">
        insert into user_info
        (user_id, password, phone_no, signature,
        profile_photo, e_mail, sex, birthday,
        nickname,wx_openid, session_key, last_login_time)
        values(#{userId},#{password},#{phoneNo},#{signature},
        #{profilePhoto},#{eMail},#{sex},#{birthday},
        #{nickname}, #{wxOpenid}, #{sessionKey}, #{lastLoginTime})
    </insert>

    <select id="checkHasRole" resultType="java.lang.Integer">
        select 1
        from user_role_relation
        where user_id = #{userId}
        and role_id = (select role_id from role
        where name = #{roleName} limit 1)
        limit 1
    </select>

    <insert id="setRole">
        insert into user_role_relation
        (user_id, role_id)
        values(#{userId},
        (select role_id from role
        where name = #{roleName} limit 1))
    </insert>

    <delete id="delRole">
        delete from user_role_relation
        where user_id = #{userId}
        and role_id = (select role_id from role
        where name = #{roleName} limit 1)
        limit 1
    </delete>

    <update id="updateProfilePhoto">
        update user_info
        set profile_photo = #{fileName}
        where user_id = #{userId}
        limit 1
    </update>

    <delete id="delUser">
        delete from user_info
        where user_id = #{userId}
        limit 1
    </delete>


</mapper>