<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="club.zhouyouwu.graduate.usermanagement.mapper.ClazzMapper">
    <resultMap id="Clazz" type="club.zhouyouwu.graduate.usermanagement.entity.Clazz">
        <id column="class_id" property="clazzId"/>
        <result column="teacher_id" property="teacherId"/>
        <result column="desc" property="desc"/>
        <association property="students" javaType="club.zhouyouwu.graduate.usermanagement.entity.Student">
            <result column="student_id" property="studentId"/>
            <result column="student_name" property="studentName"/>
        </association>
    </resultMap>

    <select id="getClazz" resultMap="Clazz">
        select a.class_id, a.teacher_id, a.description,
        b.student_id
        from study_class a
        left join student_class_relation b on a.class_id = b.class_id
        where a.teacher_id = #{userId}
        and b.status = 2
        <if test="clazzId != null">
            and a.class_id = #{clazzId}
        </if>
    </select>

    <insert id="createClazz">
        insert into study_class
        (class_id, teacher_id, description)
        values (#{clazzId}, #{userId}, #{desc})
    </insert>

    <delete id="delClazz">
        delete from study_class
        where class_id = #{clazzId}
        limit 1
    </delete>

    <insert id="joinStudent">
        insert into student_class_relation
        (student_id, class_id, status)
        values (#{studentId}, #{clazzId}, 0)
    </insert>

    <insert id="joinStudents">
        insert into student_class_relation
        (student_id, class_id, status)
        values
        <foreach collection="studentIds" item="studentId" separator=",">
            (#{studentId}, #{clazzId}, 0)
        </foreach>
    </insert>

    <select id="studentBelongClazz" resultType="int">
        select status
        from student_class_relation
        where student_id = #{studentId}
        and class_id = #{clazzId}
        limit 1
    </select>

    <select id="notBelongClazzStudents" resultType="java.lang.Long">
        select student_id
        from student_class_relation
        where not exists(
        select student_id
        from student_class_relation
        where student_id in
         <foreach collection="studentIds" item="student" open="(" close=")" separator=",">
             #{studentId}
         </foreach>
        and class_id = #{clazzId})
    </select>

    <update id="handleApplication">
        update student_class_relation
        set status = #{operation}
        where class_id = #{classId}
        and student_id = #{studentId}
        limit 1
    </update>
</mapper>