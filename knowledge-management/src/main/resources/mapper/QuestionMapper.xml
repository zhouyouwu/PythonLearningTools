<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="club.zhouyouwu.graduate.knowledgemanagement.mapper.QuestionMapper">
    <sql id="normal_question_column">
        ques_id, ques_topic, ques_options, ques_answer, ques_type
    </sql>
    <resultMap id="NormalQuestion" type="club.zhouyouwu.graduate.knowledgemanagement.model.entity.NormalQuestion">
        <id property="quesId" column="ques_id"/>
        <result property="quesAnswer" column="ques_answer"/>
        <result property="quesOptions" column="ques_options"/>
        <result property="quesTopic" column="ques_topic"/>
        <result property="quesType" column="ques_type"/>
    </resultMap>
    <resultMap id="ProgramQuestion" type="club.zhouyouwu.graduate.knowledgemanagement.model.entity.ProgramQuestion">
        <id property="quesId" column="ques_id"/>
        <result property="quesTopic" column="ques_topic"/>
        <result property="quesType" column="ques_type"/>
    </resultMap>
    <select id="getUnsolvedQuestions" resultMap="NormalQuestion">
        select <include refid="normal_question_column"/>
        from normal_question a
        left join user_question_solve b on a.ques_id = b.ques_id
        where b.user_id = #{userId}
        and b.status != 1
        <if test="typeId != null">
            and a.ques_type = #{typeId}
        </if>
        order by rand()
        limit #{count}
    </select>
    <select id="getNormalQuestionById" resultMap="NormalQuestion">
        select
        <include refid="normal_question_column"/>
        from normal_question
        where ques_id = #{quesId}
        limit 1
    </select>
    <select id="getProgramQuestionById" resultMap="ProgramQuestion">
        select
        ques_id, ques_topic, ques_type
        from program_question
        where ques_id = #{quesId}
        limit 1
    </select>

    <insert id="setNormalQuestion">
        insert into normal_question
        (ques_id, ques_topic, ques_options, ques_answer, ques_type)
        values(#{question.quesId}, #{question.quesTopic}, #{question.quesOptions},
         #{question.quesAnswer}, #{question.quesType})
    </insert>
    <insert id="setProgramQuestion">
        insert into program_question
        (ques_id, ques_topic, ques_type)
        values(#{question.quesId}, #{question.quesTopic}, #{question.quesType})
    </insert>

    <delete id="delNormalQuestion">
        delete from normal_question
        where ques_id = #{quesId}
        limit 1
    </delete>
    <delete id="delProgramQuestion">
        delete from program_question
        where ques_id = #{quesId}
        limit 1
    </delete>

    <update id="mdfProgramQuestion">
        update program_question
        <set>
            <if test="question.quesTopic != null">
                ques_topic = #{question.quesTopic}
            </if>
            <if test="question.quesType != null">
                ques_type = #{question.quesType}
            </if>
        </set>
        where ques_id = #{question.quesId}
        limit 1
    </update>

    <update id="mdfNormalQuestion">
        update normal_question
        <set>
            <if test="question.quesTopic != null">
                ques_topic = #{question.quesTopic}
            </if>
            <if test="question.quesType != null">
                ques_type = #{question.quesType}
            </if>
            <if test="question.quesOptions != null">
                ques_options = #{question.quesOptions}
            </if>
            <if test="question.quesAnswer">
                ques_answer = #{question.quesAnswer}
            </if>
        </set>
        where ques_id = #{question.quesId}
        limit 1
    </update>

    <select id="getUnsolvedProgramQuestions" resultMap="ProgramQuestion">
        select
        ques_id, ques_topic, ques_type
        from program_question a
        left join user_question_solve b on a.ques_id = b.ques_id
        where b.user_id = #{userId}
        and b.status != 1
        <if test="typeId != null">
            and a.ques_type = #{typeId}
        </if>
        order by rand()
        limit #{count}
    </select>

    <select id="normalQuesCount" resultType="java.lang.Integer">
        select count(ques_id)
        from normal_question
    </select>

    <select id="programQuesCount" resultType="java.lang.Integer">
        select count(ques_id)
        from program_question
    </select>
</mapper>